buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath "io.realm:realm-gradle-plugin:2.3.1"
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'


android {
    compileSdkVersion 25
    buildToolsVersion '25.0.1'
    defaultConfig {
        applicationId 'com.flaredown.flaredownApp'
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "0.01"
        manifestPlaceholders = [
                fabricApiKey:getApiProperties()['fabric_api']
        ]
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            resValue "string", "com.crashlytics.android.build_id", "debugUUIDTMP"
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false
            buildConfigField "String","INTERCOM_API", "\""+getIntercomApiKey()+"\""
        }
    }
    productFlavors {
        productRelease {
            applicationId 'com.flaredown.flaredownApp'
            buildConfigField "String", "API_BASE_URI", "\"http://staging.flaredown.com/api\""
            buildConfigField "String", "WEB_URL", "\"http://staging.flaredown.com\""
            buildConfigField "String", "WEB_URL_SIGNUP", "\"http://staging.flaredown.com/signup\""

            resValue "string", "app_name", "Flaredown"
        }
        productDebug {
            buildConfigField "String", "API_BASE_URI", "\"http://staging.flaredown.com/api\""
            buildConfigField "String", "WEB_URL", "\"http://staging.flaredown.com\""
            buildConfigField "String", "WEB_URL_SIGNUP", "\"http://staging.flaredown.com/signup\""

            resValue "string", "app_name", "\"Flaredown Debug\""
            applicationId 'com.flaredown.flaredownApp.DEBUG'
            ext.enableCrashlytics = false // Disable Crashlytics in debugging mode
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.volley:volley:1.0.0'
    compile 'com.android.support:appcompat-v7:25.1.1'
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'
    compile 'org.apmem.tools:layouts:1.9@aar'
    compile 'com.android.support:design:25.1.1'
    compile 'com.android.support:support-v4:25.1.1'
    compile ('io.intercom.android:intercom-sdk-base:1.+@aar') { transitive = true }
    compile('com.crashlytics.sdk.android:crashlytics:2.6.6@aar') { transitive = true; }
    compile 'com.github.squiggie:BottomBar:1.4.0.2'

    //--- RxJava
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.8' // RxAndroid releases are few and far between, it is recommended you also explicitly depend on RxJava's latest version for bug fixes and new features.

    //--- Used for JUnit Testing.
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'org.robolectric:robolectric:3.0'

    // Library: Butterknife http://jakewharton.github.io/butterknife/
    // Used to inject android views from xml files.
    compile 'com.jakewharton:butterknife:8.4.0'
    apt 'com.jakewharton:butterknife-compiler:8.4.0'
    // Library: Mosby http://hannesdorfmann.com/mosby/
    // Helpful MVP (Model View Presenter) helping library.
    compile 'com.hannesdorfmann.mosby:mvp:2.0.1'
    compile 'com.hannesdorfmann.mosby:viewstate:2.0.1'
    // Library: Parcelable Pleace https://github.com/sockeqwe/ParcelablePlease
    // Helps write the boilerplate code for android parcelable object.
    // Note there is a android studio plugin for this library. (look at link above).
    compile 'com.hannesdorfmann.parcelableplease:annotation:1.0.2'
    apt 'com.hannesdorfmann.parcelableplease:processor:1.0.2'
    // Library Dagger 2 https://github.com/google/dagger
    // Dependency injection.
    compile 'com.google.dagger:dagger:2.7'
    apt 'com.google.dagger:dagger-compiler:2.7'
    // Library Rx Java
    compile 'io.reactivex:rxjava:1.2.1'
    compile 'io.reactivex:rxandroid:1.2.1'
    // RX Java progard rules.
    compile 'com.artemzin.rxjava:proguard-rules:1.2.3.0'
    // Library EventBus https://github.com/greenrobot/EventBus
    // Used for easy communcation between fragments and activities
    compile 'org.greenrobot:eventbus:3.0.0'
    // Volley helps send http requests

    compile 'com.google.code.gson:gson:2.8.0'

    // Allow java streams in JRE 7
    compile 'com.annimon:stream:1.1.5'

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'

}

def getIntercomApiKey(){
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('api.properties')))
    return props['intercom_api']
}

def getApiProperties() {
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('api.properties')))
    return props
}
