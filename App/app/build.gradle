buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        jcenter()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
        classpath "io.realm:realm-gradle-plugin:1.1.0"
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 22
    buildToolsVersion '23.0.2'
    defaultConfig {
        applicationId 'com.flaredown.flaredownApp'
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "0.01" }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            buildConfigField "String","INTERCOM_API", "\""+getIntercomApiKey()+"\""
        }
    }
    productFlavors {
        productRelease {
            applicationId 'com.flaredown.flaredownApp'
            buildConfigField "String", "API_BASE_URI", "\"http://staging.flaredown.com/api\""
            buildConfigField "String", "WEB_URL", "\"http://staging.flaredown.com\""
            resValue "string", "app_name", "Flaredown"
        }
        productDebug {
            buildConfigField "String", "API_BASE_URI", "\"http://staging.flaredown.com/api\""
            buildConfigField "String", "WEB_URL", "\"http://staging.flaredown.com\""
            resValue "string", "app_name", "\"Flaredown Debug\""
            applicationId 'com.flaredown.flaredownApp.DEBUG'
            ext.enableCrashlytics = false // Disable Crashlytics in debugging mode
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.volley:volley:1.0.0'
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'
    compile 'org.apmem.tools:layouts:1.9@aar'
    compile 'com.android.support:design:22.2.1'
    compile 'com.android.support:support-v4:22.2.1'
    compile ('io.intercom.android:intercom-sdk-base:1.+@aar') {
        transitive = true
    }
    //--- Used for JUnit Testing.
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'org.robolectric:robolectric:3.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
}

def getIntercomApiKey(){
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('api.properties')))
    return props['intercom_api']
}